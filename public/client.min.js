class ClientLogger{constructor(){this.data=[];let t=new URL(document.currentScript.src);this.loggerURL=`${t.origin}/logger`,this._originalConsoleLog=console.log,this._sessionID=this._getSessionID(),console.log=this.customLogger.bind(this),setInterval(()=>{this.log()},5e3)}_getSessionID(){return Math.random().toString(36).substr(2,9)}customLogger(){return this.addData(arguments),this._originalConsoleLog(...arguments)}addData(t){let o=[];for(let e=0;e<t.length;e++)o.push(t[e]);o.length>0&&this.data.push(o.join(" - "))}log(){if(0===this.data.length)return;let t={data:[].concat(this.data),session:this._sessionID};this.data=[];let o={method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},mode:"cors",body:JSON.stringify(t)};fetch(this.loggerURL,o).then((function(t){return t.text()})).then(t=>{this._originalConsoleLog(t)}).catch(()=>{})}}new ClientLogger;
